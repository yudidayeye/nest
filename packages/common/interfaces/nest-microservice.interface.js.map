{"version":3,"file":"nest-microservice.interface.js","sourceRoot":"","sources":["nest-microservice.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { ExceptionFilter } from './exceptions/exception-filter.interface';\r\nimport { CanActivate } from './features/can-activate.interface';\r\nimport { NestInterceptor } from './features/nest-interceptor.interface';\r\nimport { PipeTransform } from './features/pipe-transform.interface';\r\nimport { INestApplicationContext } from './nest-application-context.interface';\r\nimport { WebSocketAdapter } from './websockets/web-socket-adapter.interface';\r\n\r\n/**\r\n * Interface describing Microservice Context.\r\n *\r\n * @publicApi\r\n */\r\nexport interface INestMicroservice extends INestApplicationContext {\r\n  /**\r\n   * Starts the microservice.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  listen(): Promise<any>;\r\n\r\n  /**\r\n   * Register Ws Adapter which will be used inside Gateways.\r\n   * Use when you want to override default `socket.io` library.\r\n   *\r\n   * @param {WebSocketAdapter} adapter\r\n   * @returns {this}\r\n   */\r\n  useWebSocketAdapter(adapter: WebSocketAdapter): this;\r\n\r\n  /**\r\n   * Registers exception filters as global filters (will be used within every message pattern handler)\r\n   *\r\n   * @param {...ExceptionFilter} filters\r\n   */\r\n  useGlobalFilters(...filters: ExceptionFilter[]): this;\r\n\r\n  /**\r\n   * Registers pipes as global pipes (will be used within every message pattern handler)\r\n   *\r\n   * @param {...PipeTransform} pipes\r\n   */\r\n  useGlobalPipes(...pipes: PipeTransform<any>[]): this;\r\n\r\n  /**\r\n   * Registers interceptors as global interceptors (will be used within every message pattern handler)\r\n   *\r\n   * @param {...NestInterceptor} interceptors\r\n   */\r\n  useGlobalInterceptors(...interceptors: NestInterceptor[]): this;\r\n\r\n  /**\r\n   * Registers guards as global guards (will be used within every message pattern handler)\r\n   *\r\n   * @param {...CanActivate} guards\r\n   */\r\n  useGlobalGuards(...guards: CanActivate[]): this;\r\n\r\n  /**\r\n   * Terminates the application\r\n   *\r\n   * @returns {Promise<void>}\r\n   */\r\n  close(): Promise<void>;\r\n}\r\n"]}