{"version":3,"file":"can-activate.interface.js","sourceRoot":"","sources":["can-activate.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { ExecutionContext } from './execution-context.interface';\r\n\r\n/**\r\n * Interface defining the `canActivate()` function that must be implemented\r\n * by a guard.  Return value indicates whether or not the current request is\r\n * allowed to proceed.  Return can be either synchronous (`boolean`)\r\n * or asynchronous (`Promise` or `Observable`).\r\n *\r\n * @see [Guards](https://docs.nestjs.com/guards)\r\n *\r\n * @publicApi\r\n */\r\nexport interface CanActivate {\r\n  /**\r\n   * @param context Current execution context. Provides access to details about\r\n   * the current request pipeline.\r\n   *\r\n   * @returns Value indicating whether or not the current request is allowed to\r\n   * proceed.\r\n   */\r\n  canActivate(\r\n    context: ExecutionContext,\r\n  ): boolean | Promise<boolean> | Observable<boolean>;\r\n}\r\n"]}