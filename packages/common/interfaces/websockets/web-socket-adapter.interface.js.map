{"version":3,"file":"web-socket-adapter.interface.js","sourceRoot":"","sources":["web-socket-adapter.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport interface WsMessageHandler<T = string> {\r\n  message: T;\r\n  callback: (...args: any[]) => Observable<any> | Promise<any>;\r\n}\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport interface WebSocketAdapter<\r\n  TServer = any,\r\n  TClient = any,\r\n  TOptions = any,\r\n> {\r\n  create(port: number, options?: TOptions): TServer;\r\n  bindClientConnect(server: TServer, callback: Function): any;\r\n  bindClientDisconnect?(client: TClient, callback: Function): any;\r\n  bindMessageHandlers(\r\n    client: TClient,\r\n    handlers: WsMessageHandler[],\r\n    transform: (data: any) => Observable<any>,\r\n  ): any;\r\n  close(server: TServer): any;\r\n}\r\n"]}