{"version":3,"file":"default-value.pipe.js","sourceRoot":"","sources":["default-value.pipe.ts"],"names":[],"mappings":";;;;AAAA,kFAAqE;AAKrE,wDAAwD;AAExD;;;;;;GAMG;AAEI,IAAM,gBAAgB,8BAAtB,MAAM,gBAAgB;IAG3B,YAA+B,YAAe;QAAf,iBAAY,GAAZ,YAAY,CAAG;IAAG,CAAC;IAElD,SAAS,CAAC,KAAS,EAAE,SAA4B;QAC/C,IACE,IAAA,oBAAK,EAAC,KAAK,CAAC;YACZ,CAAC,IAAA,uBAAQ,EAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAA0B,CAAC,CAAC,EACtD;YACA,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAA;2BAdY,gBAAgB;IAD5B,IAAA,iCAAU,GAAE;;GACA,gBAAgB,CAc5B","sourcesContent":["import { Injectable } from '../decorators/core/injectable.decorator';\r\nimport {\r\n  ArgumentMetadata,\r\n  PipeTransform,\r\n} from '../interfaces/features/pipe-transform.interface';\r\nimport { isNil, isNumber } from '../utils/shared.utils';\r\n\r\n/**\r\n * Defines the built-in DefaultValue Pipe\r\n *\r\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\r\n *\r\n * @publicApi\r\n */\r\n@Injectable()\r\nexport class DefaultValuePipe<T = any, R = any>\r\n  implements PipeTransform<T, T | R>\r\n{\r\n  constructor(protected readonly defaultValue: R) {}\r\n\r\n  transform(value?: T, _metadata?: ArgumentMetadata): T | R {\r\n    if (\r\n      isNil(value) ||\r\n      (isNumber(value) && isNaN(value as unknown as number))\r\n    ) {\r\n      return this.defaultValue;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n"]}