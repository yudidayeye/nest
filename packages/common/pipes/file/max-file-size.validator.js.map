{"version":3,"file":"max-file-size.validator.js","sourceRoot":"","sources":["max-file-size.validator.ts"],"names":[],"mappings":";;;AAAA,yEAA2D;AAQ3D;;;;;;GAMG;AACH,MAAa,oBAAqB,SAAQ,wCAGzC;IACC,iBAAiB;QACf,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACvC,IAAI,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,KAAK,UAAU,EAAE;gBACxD,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACvE;YAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;SACvC;QAED,OAAO,iDAAiD,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,CAAC;IAC5F,CAAC;IAEM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,EAAE;YACpC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;IACtE,CAAC;CACF;AAvBD,oDAuBC","sourcesContent":["import { FileValidator } from './file-validator.interface';\r\nimport { IFile } from './interfaces';\r\n\r\nexport type MaxFileSizeValidatorOptions = {\r\n  maxSize: number;\r\n  message?: string | ((maxSize: number) => string);\r\n};\r\n\r\n/**\r\n * Defines the built-in MaxSize File Validator\r\n *\r\n * @see [File Validators](https://docs.nestjs.com/techniques/file-upload#file-validation)\r\n *\r\n * @publicApi\r\n */\r\nexport class MaxFileSizeValidator extends FileValidator<\r\n  MaxFileSizeValidatorOptions,\r\n  IFile\r\n> {\r\n  buildErrorMessage(): string {\r\n    if ('message' in this.validationOptions) {\r\n      if (typeof this.validationOptions.message === 'function') {\r\n        return this.validationOptions.message(this.validationOptions.maxSize);\r\n      }\r\n\r\n      return this.validationOptions.message;\r\n    }\r\n\r\n    return `Validation failed (expected size is less than ${this.validationOptions.maxSize})`;\r\n  }\r\n\r\n  public isValid(file?: IFile): boolean {\r\n    if (!this.validationOptions || !file) {\r\n      return true;\r\n    }\r\n\r\n    return 'size' in file && file.size < this.validationOptions.maxSize;\r\n  }\r\n}\r\n"]}