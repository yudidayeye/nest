{"version":3,"file":"parse-file-pipe.builder.js","sourceRoot":"","sources":["parse-file-pipe.builder.ts"],"names":[],"mappings":";;;AAAA,+DAG+B;AAE/B,uEAGmC;AAEnC,uDAAkD;AAElD;;GAEG;AACH,MAAa,oBAAoB;IAAjC;QACU,eAAU,GAAoB,EAAE,CAAC;IA0B3C,CAAC;IAxBC,mBAAmB,CAAC,OAAoC;QACtD,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,8CAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,oBAAoB,CAAC,OAAiC;QACpD,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,uCAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,YAAY,CAAC,SAAwB;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CACH,iBAAwD;QAExD,MAAM,aAAa,GAAG,IAAI,+BAAa,CAAC;YACtC,GAAG,iBAAiB;YACpB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,OAAO,aAAa,CAAC;IACvB,CAAC;CACF;AA3BD,oDA2BC","sourcesContent":["import {\r\n  FileTypeValidator,\r\n  FileTypeValidatorOptions,\r\n} from './file-type.validator';\r\nimport { FileValidator } from './file-validator.interface';\r\nimport {\r\n  MaxFileSizeValidator,\r\n  MaxFileSizeValidatorOptions,\r\n} from './max-file-size.validator';\r\nimport { ParseFileOptions } from './parse-file-options.interface';\r\nimport { ParseFilePipe } from './parse-file.pipe';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport class ParseFilePipeBuilder {\r\n  private validators: FileValidator[] = [];\r\n\r\n  addMaxSizeValidator(options: MaxFileSizeValidatorOptions) {\r\n    return this.addValidator(new MaxFileSizeValidator(options));\r\n  }\r\n\r\n  addFileTypeValidator(options: FileTypeValidatorOptions) {\r\n    return this.addValidator(new FileTypeValidator(options));\r\n  }\r\n\r\n  addValidator(validator: FileValidator) {\r\n    this.validators.push(validator);\r\n    return this;\r\n  }\r\n\r\n  build(\r\n    additionalOptions?: Omit<ParseFileOptions, 'validators'>,\r\n  ): ParseFilePipe {\r\n    const parseFilePipe = new ParseFilePipe({\r\n      ...additionalOptions,\r\n      validators: this.validators,\r\n    });\r\n\r\n    this.validators = [];\r\n    return parseFilePipe;\r\n  }\r\n}\r\n"]}