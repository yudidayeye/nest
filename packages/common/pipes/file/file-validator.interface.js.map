{"version":3,"file":"file-validator.interface.js","sourceRoot":"","sources":["file-validator.interface.ts"],"names":[],"mappings":";;;AAEA;;;;;GAKG;AACH,MAAsB,aAAa;IAIjC,YAA+B,iBAAqC;QAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;IAAG,CAAC;CAazE;AAjBD,sCAiBC","sourcesContent":["import { IFile } from './interfaces';\r\n\r\n/**\r\n * Interface describing FileValidators, which can be added to a ParseFilePipe\r\n *\r\n * @see {ParseFilePipe}\r\n * @publicApi\r\n */\r\nexport abstract class FileValidator<\r\n  TValidationOptions = Record<string, any>,\r\n  TFile extends IFile = IFile,\r\n> {\r\n  constructor(protected readonly validationOptions: TValidationOptions) {}\r\n\r\n  /**\r\n   * Indicates if this file should be considered valid, according to the options passed in the constructor.\r\n   * @param file the file from the request object\r\n   */\r\n  abstract isValid(file?: TFile): boolean | Promise<boolean>;\r\n\r\n  /**\r\n   * Builds an error message in case the validation fails.\r\n   * @param file the file from the request object\r\n   */\r\n  abstract buildErrorMessage(file: any): string;\r\n}\r\n"]}