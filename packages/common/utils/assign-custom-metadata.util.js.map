{"version":3,"file":"assign-custom-metadata.util.js","sourceRoot":"","sources":["assign-custom-metadata.util.ts"],"names":[],"mappings":";;;AAAA,4CAA0D;AAQ1D,SAAgB,6BAA6B,CAC3C,IAAwC,EACxC,SAA0B,EAC1B,KAAa,EACb,OAA2B,EAC3B,IAAgB,EAChB,GAAG,KAA8C;IAEjD,OAAO;QACL,GAAG,IAAI;QACP,CAAC,GAAG,SAAS,GAAG,sCAA0B,IAAI,KAAK,EAAE,CAAC,EAAE;YACtD,KAAK;YACL,OAAO;YACP,IAAI;YACJ,KAAK;SACN;KACF,CAAC;AACJ,CAAC;AAjBD,sEAiBC","sourcesContent":["import { CUSTOM_ROUTE_ARGS_METADATA } from '../constants';\r\nimport {\r\n  ParamData,\r\n  RouteParamMetadata,\r\n} from '../decorators/http/route-params.decorator';\r\nimport { PipeTransform, Type } from '../interfaces';\r\nimport { CustomParamFactory } from '../interfaces/features/custom-route-param-factory.interface';\r\n\r\nexport function assignCustomParameterMetadata(\r\n  args: Record<number, RouteParamMetadata>,\r\n  paramtype: number | string,\r\n  index: number,\r\n  factory: CustomParamFactory,\r\n  data?: ParamData,\r\n  ...pipes: (Type<PipeTransform> | PipeTransform)[]\r\n) {\r\n  return {\r\n    ...args,\r\n    [`${paramtype}${CUSTOM_ROUTE_ARGS_METADATA}:${index}`]: {\r\n      index,\r\n      factory,\r\n      data,\r\n      pipes,\r\n    },\r\n  };\r\n}\r\n"]}