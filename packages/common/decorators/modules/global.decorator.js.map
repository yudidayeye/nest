{"version":3,"file":"global.decorator.js","sourceRoot":"","sources":["global.decorator.ts"],"names":[],"mappings":";;;AAAA,+CAAyD;AAEzD;;;;;;;;;;GAUG;AACH,SAAgB,MAAM;IACpB,OAAO,CAAC,MAAgB,EAAE,EAAE;QAC1B,OAAO,CAAC,cAAc,CAAC,kCAAsB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC,CAAC;AACJ,CAAC;AAJD,wBAIC","sourcesContent":["import { GLOBAL_MODULE_METADATA } from '../../constants';\r\n\r\n/**\r\n * Decorator that makes a module global-scoped.\r\n *\r\n * Once imported into any module, a global-scoped module will be visible\r\n * in all modules. Thereafter, modules that wish to inject a service exported\r\n * from a global module do not need to import the provider module.\r\n *\r\n * @see [Global modules](https://docs.nestjs.com/modules#global-modules)\r\n *\r\n * @publicApi\r\n */\r\nexport function Global(): ClassDecorator {\r\n  return (target: Function) => {\r\n    Reflect.defineMetadata(GLOBAL_MODULE_METADATA, true, target);\r\n  };\r\n}\r\n"]}