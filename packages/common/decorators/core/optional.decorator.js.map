{"version":3,"file":"optional.decorator.js","sourceRoot":"","sources":["optional.decorator.ts"],"names":[],"mappings":";;;AAAA,+CAGyB;AACzB,2DAAuD;AAEvD;;;;;;;;;;;;GAYG;AACH,SAAgB,QAAQ;IACtB,OAAO,CAAC,MAAc,EAAE,GAAgC,EAAE,KAAc,EAAE,EAAE;QAC1E,IAAI,CAAC,IAAA,0BAAW,EAAC,KAAK,CAAC,EAAE;YACvB,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,kCAAsB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;YACvE,OAAO,CAAC,cAAc,CAAC,kCAAsB,EAAE,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;YACzE,OAAO;SACR;QACD,MAAM,UAAU,GACd,OAAO,CAAC,WAAW,CACjB,2CAA+B,EAC/B,MAAM,CAAC,WAAW,CACnB,IAAI,EAAE,CAAC;QACV,OAAO,CAAC,cAAc,CACpB,2CAA+B,EAC/B,CAAC,GAAG,UAAU,EAAE,GAAG,CAAC,EACpB,MAAM,CAAC,WAAW,CACnB,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAlBD,4BAkBC","sourcesContent":["import {\r\n  OPTIONAL_DEPS_METADATA,\r\n  OPTIONAL_PROPERTY_DEPS_METADATA,\r\n} from '../../constants';\r\nimport { isUndefined } from '../../utils/shared.utils';\r\n\r\n/**\r\n * Parameter decorator for an injected dependency marking the\r\n * dependency as optional.\r\n *\r\n * For example:\r\n * ```typescript\r\n * constructor(@Optional() @Inject('HTTP_OPTIONS')private readonly httpClient: T) {}\r\n * ```\r\n *\r\n * @see [Optional providers](https://docs.nestjs.com/providers#optional-providers)\r\n *\r\n * @publicApi\r\n */\r\nexport function Optional(): PropertyDecorator & ParameterDecorator {\r\n  return (target: object, key: string | symbol | undefined, index?: number) => {\r\n    if (!isUndefined(index)) {\r\n      const args = Reflect.getMetadata(OPTIONAL_DEPS_METADATA, target) || [];\r\n      Reflect.defineMetadata(OPTIONAL_DEPS_METADATA, [...args, index], target);\r\n      return;\r\n    }\r\n    const properties =\r\n      Reflect.getMetadata(\r\n        OPTIONAL_PROPERTY_DEPS_METADATA,\r\n        target.constructor,\r\n      ) || [];\r\n    Reflect.defineMetadata(\r\n      OPTIONAL_PROPERTY_DEPS_METADATA,\r\n      [...properties, key],\r\n      target.constructor,\r\n    );\r\n  };\r\n}\r\n"]}