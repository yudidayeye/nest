{"version":3,"file":"request-mapping.decorator.js","sourceRoot":"","sources":["request-mapping.decorator.ts"],"names":[],"mappings":";;;AAAA,+CAAiE;AACjE,yEAAgE;AAOhE,MAAM,eAAe,GAAG;IACtB,CAAC,yBAAa,CAAC,EAAE,GAAG;IACpB,CAAC,2BAAe,CAAC,EAAE,mCAAa,CAAC,GAAG;CACrC,CAAC;AAEK,MAAM,cAAc,GAAG,CAC5B,WAAmC,eAAe,EACjC,EAAE;IACnB,MAAM,YAAY,GAAG,QAAQ,CAAC,yBAAa,CAAC,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;IACtE,MAAM,aAAa,GAAG,QAAQ,CAAC,2BAAe,CAAC,IAAI,mCAAa,CAAC,GAAG,CAAC;IAErE,OAAO,CACL,MAAc,EACd,GAAoB,EACpB,UAAwC,EACxC,EAAE;QACF,OAAO,CAAC,cAAc,CAAC,yBAAa,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9D,OAAO,CAAC,cAAc,CAAC,2BAAe,EAAE,aAAa,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACzE,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,cAAc,kBAgBzB;AAEF,MAAM,sBAAsB,GAC1B,CAAC,MAAqB,EAAE,EAAE,CAC1B,CAAC,IAAwB,EAAmB,EAAE;IAC5C,OAAO,IAAA,sBAAc,EAAC;QACpB,CAAC,yBAAa,CAAC,EAAE,IAAI;QACrB,CAAC,2BAAe,CAAC,EAAE,MAAM;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC;AAEJ;;;;;;GAMG;AACU,QAAA,IAAI,GAAG,sBAAsB,CAAC,mCAAa,CAAC,IAAI,CAAC,CAAC;AAE/D;;;;;;GAMG;AACU,QAAA,GAAG,GAAG,sBAAsB,CAAC,mCAAa,CAAC,GAAG,CAAC,CAAC;AAE7D;;;;;;GAMG;AACU,QAAA,MAAM,GAAG,sBAAsB,CAAC,mCAAa,CAAC,MAAM,CAAC,CAAC;AAEnE;;;;;;GAMG;AACU,QAAA,GAAG,GAAG,sBAAsB,CAAC,mCAAa,CAAC,GAAG,CAAC,CAAC;AAE7D;;;;;;GAMG;AACU,QAAA,KAAK,GAAG,sBAAsB,CAAC,mCAAa,CAAC,KAAK,CAAC,CAAC;AAEjE;;;;;;GAMG;AACU,QAAA,OAAO,GAAG,sBAAsB,CAAC,mCAAa,CAAC,OAAO,CAAC,CAAC;AAErE;;;;;;GAMG;AACU,QAAA,IAAI,GAAG,sBAAsB,CAAC,mCAAa,CAAC,IAAI,CAAC,CAAC;AAE/D;;;;;;GAMG;AACU,QAAA,GAAG,GAAG,sBAAsB,CAAC,mCAAa,CAAC,GAAG,CAAC,CAAC;AAE7D;;;;;;GAMG;AACU,QAAA,MAAM,GAAG,sBAAsB,CAAC,mCAAa,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import { METHOD_METADATA, PATH_METADATA } from '../../constants';\r\nimport { RequestMethod } from '../../enums/request-method.enum';\r\n\r\nexport interface RequestMappingMetadata {\r\n  path?: string | string[];\r\n  method?: RequestMethod;\r\n}\r\n\r\nconst defaultMetadata = {\r\n  [PATH_METADATA]: '/',\r\n  [METHOD_METADATA]: RequestMethod.GET,\r\n};\r\n\r\nexport const RequestMapping = (\r\n  metadata: RequestMappingMetadata = defaultMetadata,\r\n): MethodDecorator => {\r\n  const pathMetadata = metadata[PATH_METADATA];\r\n  const path = pathMetadata && pathMetadata.length ? pathMetadata : '/';\r\n  const requestMethod = metadata[METHOD_METADATA] || RequestMethod.GET;\r\n\r\n  return (\r\n    target: object,\r\n    key: string | symbol,\r\n    descriptor: TypedPropertyDescriptor<any>,\r\n  ) => {\r\n    Reflect.defineMetadata(PATH_METADATA, path, descriptor.value);\r\n    Reflect.defineMetadata(METHOD_METADATA, requestMethod, descriptor.value);\r\n    return descriptor;\r\n  };\r\n};\r\n\r\nconst createMappingDecorator =\r\n  (method: RequestMethod) =>\r\n  (path?: string | string[]): MethodDecorator => {\r\n    return RequestMapping({\r\n      [PATH_METADATA]: path,\r\n      [METHOD_METADATA]: method,\r\n    });\r\n  };\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP POST requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Post = createMappingDecorator(RequestMethod.POST);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP GET requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Get = createMappingDecorator(RequestMethod.GET);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP DELETE requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Delete = createMappingDecorator(RequestMethod.DELETE);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP PUT requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Put = createMappingDecorator(RequestMethod.PUT);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP PATCH requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Patch = createMappingDecorator(RequestMethod.PATCH);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP OPTIONS requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Options = createMappingDecorator(RequestMethod.OPTIONS);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes HTTP HEAD requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Head = createMappingDecorator(RequestMethod.HEAD);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes all HTTP requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const All = createMappingDecorator(RequestMethod.ALL);\r\n\r\n/**\r\n * Route handler (method) Decorator. Routes all HTTP requests to the specified path.\r\n *\r\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\r\n *\r\n * @publicApi\r\n */\r\nexport const Search = createMappingDecorator(RequestMethod.SEARCH);\r\n"]}