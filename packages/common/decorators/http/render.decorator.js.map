{"version":3,"file":"render.decorator.js","sourceRoot":"","sources":["render.decorator.ts"],"names":[],"mappings":";;;AAAA,+CAAkD;AAElD;;;;;;;;;;GAUG;AACH,SAAgB,MAAM,CAAC,QAAgB;IACrC,OAAO,CACL,MAAc,EACd,GAAoB,EACpB,UAAwC,EACxC,EAAE;QACF,OAAO,CAAC,cAAc,CAAC,2BAAe,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACpE,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC;AATD,wBASC","sourcesContent":["import { RENDER_METADATA } from '../../constants';\r\n\r\n/**\r\n * Route handler method Decorator.  Defines a template to be rendered by the controller.\r\n *\r\n * For example: `@Render('index')`\r\n *\r\n * @param template name of the render engine template file\r\n *\r\n * @see [Model-View-Controller](https://docs.nestjs.com/techniques/mvc)\r\n *\r\n * @publicApi\r\n */\r\nexport function Render(template: string): MethodDecorator {\r\n  return (\r\n    target: object,\r\n    key: string | symbol,\r\n    descriptor: TypedPropertyDescriptor<any>,\r\n  ) => {\r\n    Reflect.defineMetadata(RENDER_METADATA, template, descriptor.value);\r\n    return descriptor;\r\n  };\r\n}\r\n"]}