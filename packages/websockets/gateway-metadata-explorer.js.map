{"version":3,"file":"gateway-metadata-explorer.js","sourceRoot":"","sources":["gateway-metadata-explorer.ts"],"names":[],"mappings":";;;AAAA,oEAA4E;AAG5E,2CAIqB;AASrB,MAAa,uBAAuB;IAClC,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAE1D,OAAO,CAAC,QAAqB;QAClC,MAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,eAAe;aACxB,iBAAiB,CAAC,iBAAiB,CAAC;aACpC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;aACpE,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,qBAAqB,CAC1B,iBAAyB,EACzB,UAAkB;QAElB,MAAM,QAAQ,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAC/C,MAAM,gBAAgB,GAAG,OAAO,CAAC,WAAW,CAC1C,oCAAwB,EACxB,QAAQ,CACT,CAAC;QACF,IAAI,IAAA,0BAAW,EAAC,gBAAgB,CAAC,EAAE;YACjC,OAAO,IAAI,CAAC;SACb;QACD,MAAM,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,4BAAgB,EAAE,QAAQ,CAAC,CAAC;QAChE,OAAO;YACL,QAAQ;YACR,OAAO;YACP,UAAU;SACX,CAAC;IACJ,CAAC;IAEM,CAAC,kBAAkB,CAAC,QAAqB;QAC9C,KAAK,MAAM,WAAW,IAAI,QAAQ,EAAE;YAClC,IAAI,IAAA,yBAAU,EAAC,WAAW,CAAC,EAAE;gBAC3B,SAAS;aACV;YACD,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAClC,mCAAuB,EACvB,QAAQ,EACR,QAAQ,CACT,CAAC;YACF,IAAI,CAAC,IAAA,0BAAW,EAAC,QAAQ,CAAC,EAAE;gBAC1B,MAAM,QAAQ,CAAC;aAChB;SACF;IACH,CAAC;CACF;AA/CD,0DA+CC","sourcesContent":["import { isFunction, isUndefined } from '@nestjs/common/utils/shared.utils';\r\nimport { MetadataScanner } from '@nestjs/core/metadata-scanner';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  GATEWAY_SERVER_METADATA,\r\n  MESSAGE_MAPPING_METADATA,\r\n  MESSAGE_METADATA,\r\n} from './constants';\r\nimport { NestGateway } from './interfaces/nest-gateway.interface';\r\n\r\nexport interface MessageMappingProperties {\r\n  message: any;\r\n  methodName: string;\r\n  callback: (...args: any[]) => Observable<any> | Promise<any> | any;\r\n}\r\n\r\nexport class GatewayMetadataExplorer {\r\n  constructor(private readonly metadataScanner: MetadataScanner) {}\r\n\r\n  public explore(instance: NestGateway): MessageMappingProperties[] {\r\n    const instancePrototype = Object.getPrototypeOf(instance);\r\n    return this.metadataScanner\r\n      .getAllMethodNames(instancePrototype)\r\n      .map(method => this.exploreMethodMetadata(instancePrototype, method))\r\n      .filter(metadata => metadata);\r\n  }\r\n\r\n  public exploreMethodMetadata(\r\n    instancePrototype: object,\r\n    methodName: string,\r\n  ): MessageMappingProperties {\r\n    const callback = instancePrototype[methodName];\r\n    const isMessageMapping = Reflect.getMetadata(\r\n      MESSAGE_MAPPING_METADATA,\r\n      callback,\r\n    );\r\n    if (isUndefined(isMessageMapping)) {\r\n      return null;\r\n    }\r\n    const message = Reflect.getMetadata(MESSAGE_METADATA, callback);\r\n    return {\r\n      callback,\r\n      message,\r\n      methodName,\r\n    };\r\n  }\r\n\r\n  public *scanForServerHooks(instance: NestGateway): IterableIterator<string> {\r\n    for (const propertyKey in instance) {\r\n      if (isFunction(propertyKey)) {\r\n        continue;\r\n      }\r\n      const property = String(propertyKey);\r\n      const isServer = Reflect.getMetadata(\r\n        GATEWAY_SERVER_METADATA,\r\n        instance,\r\n        property,\r\n      );\r\n      if (!isUndefined(isServer)) {\r\n        yield property;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}