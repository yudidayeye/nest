{"version":3,"file":"sockets-container.js","sourceRoot":"","sources":["sockets-container.ts"],"names":[],"mappings":";;;AAAA,oCAAoC;AAGpC,MAAa,gBAAgB;IAA7B;QACmB,+BAA0B,GAAG,IAAI,GAAG,EAGlD,CAAC;IA8BN,CAAC;IA5BQ,MAAM;QACX,OAAO,IAAI,CAAC,0BAA0B,CAAC;IACzC,CAAC;IAEM,cAAc,CACnB,OAAU;QAEV,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;IAEM,MAAM,CACX,OAAU,EACV,IAA+B;QAE/B,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,CAAC;IAC1C,CAAC;IAEO,qBAAqB,CAC3B,OAAU;QAEV,OAAO,IAAI,CAAC,OAAO,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IAChD,CAAC;CACF;AAlCD,4CAkCC","sourcesContent":["import * as hash from 'object-hash';\r\nimport { GatewayMetadata, ServerAndEventStreamsHost } from './interfaces';\r\n\r\nexport class SocketsContainer {\r\n  private readonly serverAndEventStreamsHosts = new Map<\r\n    string | RegExp,\r\n    ServerAndEventStreamsHost\r\n  >();\r\n\r\n  public getAll(): Map<string | RegExp, ServerAndEventStreamsHost> {\r\n    return this.serverAndEventStreamsHosts;\r\n  }\r\n\r\n  public getOneByConfig<T extends GatewayMetadata = any>(\r\n    options: T,\r\n  ): ServerAndEventStreamsHost {\r\n    const uniqueToken = this.generateHashByOptions(options);\r\n    return this.serverAndEventStreamsHosts.get(uniqueToken);\r\n  }\r\n\r\n  public addOne<T extends GatewayMetadata = any>(\r\n    options: T,\r\n    host: ServerAndEventStreamsHost,\r\n  ) {\r\n    const uniqueToken = this.generateHashByOptions(options);\r\n    this.serverAndEventStreamsHosts.set(uniqueToken, host);\r\n  }\r\n\r\n  public clear() {\r\n    this.serverAndEventStreamsHosts.clear();\r\n  }\r\n\r\n  private generateHashByOptions<T extends GatewayMetadata = any>(\r\n    options: T,\r\n  ): string {\r\n    return hash(options, { ignoreUnknown: true });\r\n  }\r\n}\r\n"]}