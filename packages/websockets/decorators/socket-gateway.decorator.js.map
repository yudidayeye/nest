{"version":3,"file":"socket-gateway.decorator.js","sourceRoot":"","sources":["socket-gateway.decorator.ts"],"names":[],"mappings":";;;AAAA,4CAAgF;AAgBhF,SAAgB,gBAAgB,CAE9B,aAA0B,EAAE,OAAW;IACvC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,aAAuB,CAAC,CAAC;IAC5D,wCAAwC;IACxC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;IAE5E,GAAG,GAAG,GAAG,IAAK,EAAQ,CAAC;IACvB,OAAO,CAAC,MAAc,EAAE,EAAE;QACxB,OAAO,CAAC,cAAc,CAAC,4BAAgB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACvD,OAAO,CAAC,cAAc,CAAC,yBAAa,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACpD,OAAO,CAAC,cAAc,CAAC,2BAAe,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC,CAAC;AACJ,CAAC;AAbD,4CAaC","sourcesContent":["import { GATEWAY_METADATA, GATEWAY_OPTIONS, PORT_METADATA } from '../constants';\r\nimport { GatewayMetadata } from '../interfaces';\r\n\r\n/**\r\n * Decorator that marks a class as a Nest gateway that enables real-time, bidirectional\r\n * and event-based communication between the browser and the server.\r\n *\r\n * @publicApi\r\n */\r\nexport function WebSocketGateway(port?: number): ClassDecorator;\r\nexport function WebSocketGateway<\r\n  T extends Record<string, any> = GatewayMetadata,\r\n>(options?: T): ClassDecorator;\r\nexport function WebSocketGateway<\r\n  T extends Record<string, any> = GatewayMetadata,\r\n>(port?: number, options?: T): ClassDecorator;\r\nexport function WebSocketGateway<\r\n  T extends Record<string, any> = GatewayMetadata,\r\n>(portOrOptions?: number | T, options?: T): ClassDecorator {\r\n  const isPortInt = Number.isInteger(portOrOptions as number);\r\n  // eslint-disable-next-line prefer-const\r\n  let [port, opt] = isPortInt ? [portOrOptions, options] : [0, portOrOptions];\r\n\r\n  opt = opt || ({} as T);\r\n  return (target: object) => {\r\n    Reflect.defineMetadata(GATEWAY_METADATA, true, target);\r\n    Reflect.defineMetadata(PORT_METADATA, port, target);\r\n    Reflect.defineMetadata(GATEWAY_OPTIONS, opt, target);\r\n  };\r\n}\r\n"]}