{"version":3,"file":"subscribe-message.decorator.js","sourceRoot":"","sources":["subscribe-message.decorator.ts"],"names":[],"mappings":";;;AAAA,4CAA0E;AAE1E;;;;GAIG;AACI,MAAM,gBAAgB,GAAG,CAAa,OAAU,EAAmB,EAAE;IAC1E,OAAO,CACL,MAAc,EACd,GAAoB,EACpB,UAA8B,EAC9B,EAAE;QACF,OAAO,CAAC,cAAc,CAAC,oCAAwB,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACzE,OAAO,CAAC,cAAc,CAAC,4BAAgB,EAAE,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACpE,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,gBAAgB,oBAU3B","sourcesContent":["import { MESSAGE_MAPPING_METADATA, MESSAGE_METADATA } from '../constants';\r\n\r\n/**\r\n * Subscribes to messages that fulfils chosen pattern.\r\n *\r\n * @publicApi\r\n */\r\nexport const SubscribeMessage = <T = string>(message: T): MethodDecorator => {\r\n  return (\r\n    target: object,\r\n    key: string | symbol,\r\n    descriptor: PropertyDescriptor,\r\n  ) => {\r\n    Reflect.defineMetadata(MESSAGE_MAPPING_METADATA, true, descriptor.value);\r\n    Reflect.defineMetadata(MESSAGE_METADATA, message, descriptor.value);\r\n    return descriptor;\r\n  };\r\n};\r\n"]}