{"version":3,"file":"pipes-consumer.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["pipes/pipes-consumer.ts"],"names":[],"mappings":";;;AAEA,iEAA4D;AAE5D,MAAa,aAAa;IAA1B;QACmB,uBAAkB,GAAG,IAAI,yCAAkB,EAAE,CAAC;IAwBjE,CAAC;IAtBQ,KAAK,CAAC,KAAK,CAChB,KAAa,EACb,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAoB,EAC1C,KAAsB;QAEtB,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CACzD,IAA8B,CAC/B,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;IAEM,KAAK,CAAC,UAAU,CACrB,KAAa,EACb,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAA6C,EACnE,UAA2B;QAE3B,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE;YACrD,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC7D,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;AAzBD,sCAyBC","sourcesContent":["import { RouteParamtypes } from '@nestjs/common/enums/route-paramtypes.enum';\r\nimport { ArgumentMetadata, PipeTransform } from '@nestjs/common/interfaces';\r\nimport { ParamsTokenFactory } from './params-token-factory';\r\n\r\nexport class PipesConsumer {\r\n  private readonly paramsTokenFactory = new ParamsTokenFactory();\r\n\r\n  public async apply<TInput = unknown>(\r\n    value: TInput,\r\n    { metatype, type, data }: ArgumentMetadata,\r\n    pipes: PipeTransform[],\r\n  ) {\r\n    const token = this.paramsTokenFactory.exchangeEnumForString(\r\n      type as any as RouteParamtypes,\r\n    );\r\n    return this.applyPipes(value, { metatype, type: token, data }, pipes);\r\n  }\r\n\r\n  public async applyPipes<TInput = unknown>(\r\n    value: TInput,\r\n    { metatype, type, data }: { metatype: any; type?: any; data?: any },\r\n    transforms: PipeTransform[],\r\n  ) {\r\n    return transforms.reduce(async (deferredValue, pipe) => {\r\n      const val = await deferredValue;\r\n      const result = pipe.transform(val, { metatype, type, data });\r\n      return result;\r\n    }, Promise.resolve(value));\r\n  }\r\n}\r\n"]}