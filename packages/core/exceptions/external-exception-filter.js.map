{"version":3,"file":"external-exception-filter.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["exceptions/external-exception-filter.ts"],"names":[],"mappings":";;;AAAA,2CAAsE;AAEtE,MAAa,uBAAuB;IAGlC,KAAK,CAAC,SAAY,EAAE,IAAmB;QACrC,IAAI,SAAS,YAAY,KAAK,IAAI,CAAC,CAAC,SAAS,YAAY,sBAAa,CAAC,EAAE;YACvE,uBAAuB,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SAC1E;QACD,MAAM,SAAS,CAAC;IAClB,CAAC;;AARH,0DASC;AARyB,8BAAM,GAAG,IAAI,eAAM,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["import { ArgumentsHost, HttpException, Logger } from '@nestjs/common';\r\n\r\nexport class ExternalExceptionFilter<T = any, R = any> {\r\n  private static readonly logger = new Logger('ExceptionsHandler');\r\n\r\n  catch(exception: T, host: ArgumentsHost): R | Promise<R> {\r\n    if (exception instanceof Error && !(exception instanceof HttpException)) {\r\n      ExternalExceptionFilter.logger.error(exception.message, exception.stack);\r\n    }\r\n    throw exception;\r\n  }\r\n}\r\n"]}