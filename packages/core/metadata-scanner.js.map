{"version":3,"file":"metadata-scanner.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["metadata-scanner.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@nestjs/common/interfaces/injectable.interface';\r\nimport {\r\n  isConstructor,\r\n  isFunction,\r\n  isNil,\r\n} from '@nestjs/common/utils/shared.utils';\r\n\r\nexport class MetadataScanner {\r\n  private readonly cachedScannedPrototypes: Map<object, string[]> = new Map();\r\n\r\n  /**\r\n   * @deprecated\r\n   * @see {@link getAllMethodNames}\r\n   * @see getAllMethodNames\r\n   */\r\n  public scanFromPrototype<T extends Injectable, R = any>(\r\n    instance: T,\r\n    prototype: object,\r\n    callback: (name: string) => R,\r\n  ): R[] {\r\n    if (!prototype) {\r\n      return [];\r\n    }\r\n\r\n    const visitedNames = new Map<string, boolean>();\r\n    const result: R[] = [];\r\n\r\n    do {\r\n      for (const property of Object.getOwnPropertyNames(prototype)) {\r\n        if (visitedNames.has(property)) {\r\n          continue;\r\n        }\r\n\r\n        visitedNames.set(property, true);\r\n\r\n        // reason: https://github.com/nestjs/nest/pull/10821#issuecomment-1411916533\r\n        const descriptor = Object.getOwnPropertyDescriptor(prototype, property);\r\n\r\n        if (\r\n          descriptor.set ||\r\n          descriptor.get ||\r\n          isConstructor(property) ||\r\n          !isFunction(prototype[property])\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        const value = callback(property);\r\n\r\n        if (isNil(value)) {\r\n          continue;\r\n        }\r\n\r\n        result.push(value);\r\n      }\r\n    } while (\r\n      (prototype = Reflect.getPrototypeOf(prototype)) &&\r\n      prototype !== Object.prototype\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @see {@link getAllMethodNames}\r\n   * @see getAllMethodNames\r\n   */\r\n  public *getAllFilteredMethodNames(\r\n    prototype: object,\r\n  ): IterableIterator<string> {\r\n    yield* this.getAllMethodNames(prototype);\r\n  }\r\n\r\n  public getAllMethodNames(prototype: object | null): string[] {\r\n    if (!prototype) {\r\n      return [];\r\n    }\r\n\r\n    if (this.cachedScannedPrototypes.has(prototype)) {\r\n      return this.cachedScannedPrototypes.get(prototype);\r\n    }\r\n\r\n    const visitedNames = new Map<string, boolean>();\r\n    const result: string[] = [];\r\n\r\n    this.cachedScannedPrototypes.set(prototype, result);\r\n\r\n    do {\r\n      for (const property of Object.getOwnPropertyNames(prototype)) {\r\n        if (visitedNames.has(property)) {\r\n          continue;\r\n        }\r\n\r\n        visitedNames.set(property, true);\r\n\r\n        // reason: https://github.com/nestjs/nest/pull/10821#issuecomment-1411916533\r\n        const descriptor = Object.getOwnPropertyDescriptor(prototype, property);\r\n\r\n        if (\r\n          descriptor.set ||\r\n          descriptor.get ||\r\n          isConstructor(property) ||\r\n          !isFunction(prototype[property])\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        result.push(property);\r\n      }\r\n    } while (\r\n      (prototype = Reflect.getPrototypeOf(prototype)) &&\r\n      prototype !== Object.prototype\r\n    );\r\n\r\n    return result;\r\n  }\r\n}\r\n"]}