{"version":3,"file":"resolve-repl-fn.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["repl/native-functions/resolve-repl-fn.ts"],"names":[],"mappings":";;;AACA,oDAAgD;AAGhD,MAAa,aAAc,SAAQ,4BAAY;IAA/C;;QACS,iBAAY,GAAqB;YACtC,IAAI,EAAE,SAAS;YACf,WAAW,EACT,gHAAgH;YAClH,SAAS,EAAE,yDAAyD;SACrE,CAAC;IAQJ,CAAC;IANC,MAAM,CACJ,KAA6C,EAC7C,SAAc;QAEd,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;CACF;AAdD,sCAcC","sourcesContent":["import type { Type } from '@nestjs/common';\r\nimport { ReplFunction } from '../repl-function';\r\nimport type { ReplFnDefinition } from '../repl.interfaces';\r\n\r\nexport class ResolveReplFn extends ReplFunction {\r\n  public fnDefinition: ReplFnDefinition = {\r\n    name: 'resolve',\r\n    description:\r\n      'Resolves transient or request-scoped instance of either injectable or controller, otherwise, throws exception.',\r\n    signature: '(token: InjectionToken, contextId: any) => Promise<any>',\r\n  };\r\n\r\n  action(\r\n    token: string | symbol | Function | Type<any>,\r\n    contextId: any,\r\n  ): Promise<any> {\r\n    return this.ctx.app.resolve(token, contextId);\r\n  }\r\n}\r\n"]}