{"version":3,"file":"exceptions-zone.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["errors/exceptions-zone.ts"],"names":[],"mappings":";;;AAAA,2CAAwC;AACxC,2DAAuD;AAEvD,MAAM,gBAAgB,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAE/C,MAAa,cAAc;IAGlB,MAAM,CAAC,GAAG,CACf,QAAoB,EACpB,WAA+B,gBAAgB,EAC/C,aAAuB;QAEvB,IAAI;YACF,QAAQ,EAAE,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,aAAa,EAAE;gBACjB,eAAM,CAAC,KAAK,EAAE,CAAC;aAChB;YACD,QAAQ,CAAC,CAAC,CAAC,CAAC;SACb;IACH,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,QAAQ,CAC1B,QAA6B,EAC7B,WAA+B,gBAAgB,EAC/C,aAAuB;QAEvB,IAAI;YACF,MAAM,QAAQ,EAAE,CAAC;SAClB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,aAAa,EAAE;gBACjB,eAAM,CAAC,KAAK,EAAE,CAAC;aAChB;YACD,QAAQ,CAAC,CAAC,CAAC,CAAC;SACb;IACH,CAAC;;AAjCH,wCAkCC;AAjCyB,+BAAgB,GAAG,IAAI,oCAAgB,EAAE,CAAC","sourcesContent":["import { Logger } from '@nestjs/common';\r\nimport { ExceptionHandler } from './exception-handler';\r\n\r\nconst DEFAULT_TEARDOWN = () => process.exit(1);\r\n\r\nexport class ExceptionsZone {\r\n  private static readonly exceptionHandler = new ExceptionHandler();\r\n\r\n  public static run(\r\n    callback: () => void,\r\n    teardown: (err: any) => void = DEFAULT_TEARDOWN,\r\n    autoFlushLogs?: boolean,\r\n  ) {\r\n    try {\r\n      callback();\r\n    } catch (e) {\r\n      this.exceptionHandler.handle(e);\r\n      if (autoFlushLogs) {\r\n        Logger.flush();\r\n      }\r\n      teardown(e);\r\n    }\r\n  }\r\n\r\n  public static async asyncRun(\r\n    callback: () => Promise<void>,\r\n    teardown: (err: any) => void = DEFAULT_TEARDOWN,\r\n    autoFlushLogs?: boolean,\r\n  ) {\r\n    try {\r\n      await callback();\r\n    } catch (e) {\r\n      this.exceptionHandler.handle(e);\r\n      if (autoFlushLogs) {\r\n        Logger.flush();\r\n      }\r\n      teardown(e);\r\n    }\r\n  }\r\n}\r\n"]}