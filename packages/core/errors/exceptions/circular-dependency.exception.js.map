{"version":3,"file":"circular-dependency.exception.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["errors/exceptions/circular-dependency.exception.ts"],"names":[],"mappings":";;;AAAA,2DAAuD;AAEvD,MAAa,2BAA4B,SAAQ,oCAAgB;IAC/D,YAAY,OAAgB;QAC1B,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,WAAW,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,KAAK,CACH,0CAA0C,GAAG,uPAAuP,CACrS,CAAC;IACJ,CAAC;CACF;AAPD,kEAOC","sourcesContent":["import { RuntimeException } from './runtime.exception';\r\n\r\nexport class CircularDependencyException extends RuntimeException {\r\n  constructor(context?: string) {\r\n    const ctx = context ? ` inside ${context}` : ``;\r\n    super(\r\n      `A circular dependency has been detected${ctx}. Please, make sure that each side of a bidirectional relationships are decorated with \"forwardRef()\". Note that circular relationships between custom providers (e.g., factories) are not supported since functions cannot be called more than once.`,\r\n    );\r\n  }\r\n}\r\n"]}