{"version":3,"file":"http-adapter-host.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["helpers/http-adapter-host.ts"],"names":[],"mappings":";;;AAEA;;;;;;;;;;;GAWG;AACH,MAAa,eAAe;IAK1B;;;;OAIG;IACH,IAAI,WAAW,CAAC,WAAc;QAC5B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IAED;;;;;OAKG;IACH,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CACF;AAvBD,0CAuBC","sourcesContent":["import { AbstractHttpAdapter } from '../adapters/http-adapter';\r\n\r\n/**\r\n * Defines the `HttpAdapterHost` object.\r\n *\r\n * `HttpAdapterHost` wraps the underlying\r\n * platform-specific `HttpAdapter`.  The `HttpAdapter` is a wrapper around the underlying\r\n * native HTTP server library (e.g., Express).  The `HttpAdapterHost` object\r\n * provides methods to `get` and `set` the underlying HttpAdapter.\r\n *\r\n * @see [Http adapter](https://docs.nestjs.com/faq/http-adapter)\r\n *\r\n * @publicApi\r\n */\r\nexport class HttpAdapterHost<\r\n  T extends AbstractHttpAdapter = AbstractHttpAdapter,\r\n> {\r\n  private _httpAdapter?: T;\r\n\r\n  /**\r\n   * Accessor for the underlying `HttpAdapter`\r\n   *\r\n   * @param httpAdapter reference to the `HttpAdapter` to be set\r\n   */\r\n  set httpAdapter(httpAdapter: T) {\r\n    this._httpAdapter = httpAdapter;\r\n  }\r\n\r\n  /**\r\n   * Accessor for the underlying `HttpAdapter`\r\n   *\r\n   * @example\r\n   * `const httpAdapter = adapterHost.httpAdapter;`\r\n   */\r\n  get httpAdapter(): T {\r\n    return this._httpAdapter;\r\n  }\r\n}\r\n"]}