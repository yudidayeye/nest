{"version":3,"file":"context-creator.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["helpers/context-creator.ts"],"names":[],"mappings":";;;AACA,qDAAuD;AAGvD,MAAsB,cAAc;IAW3B,aAAa,CAClB,QAAoB,EACpB,QAAkC,EAClC,WAAmB,EACnB,SAAS,GAAG,0BAAc,EAC1B,UAAmB;QAEnB,MAAM,cAAc,GAClB,IAAI,CAAC,iBAAiB;YACtB,IAAI,CAAC,iBAAiB,CAAI,SAAS,EAAE,UAAU,CAAC,CAAC;QACnD,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAI,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC1E,MAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAI,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC5E,OAAO;YACL,GAAG,IAAI,CAAC,qBAAqB,CAC3B,cAAc,IAAK,EAAQ,EAC3B,SAAS,EACT,UAAU,CACX;YACD,GAAG,IAAI,CAAC,qBAAqB,CAAO,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC;YACzE,GAAG,IAAI,CAAC,qBAAqB,CAC3B,cAAc,EACd,SAAS,EACT,UAAU,CACX;SACG,CAAC;IACT,CAAC;IAEM,oBAAoB,CAAI,QAAoB,EAAE,WAAmB;QACtE,MAAM,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAClD,OAAO,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;IACjE,CAAC;IAEM,qBAAqB,CAC1B,QAAyC,EACzC,WAAmB;QAEnB,OAAO,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC;IAES,YAAY,CACpB,SAAoB,EACpB,eAAgC;QAEhC,OAAO,SAAS,CAAC,SAAS;YACxB,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC;gBAClB,KAAK,EAAE,eAAe,CAAC,KAAK;gBAC5B,aAAa,EAAE,eAAe,CAAC,uBAAuB,EAAE;aACzD,CAAC;YACJ,CAAC,CAAC,SAAS,CAAC;IAChB,CAAC;CACF;AA7DD,wCA6DC","sourcesContent":["import { Controller } from '@nestjs/common/interfaces';\r\nimport { STATIC_CONTEXT } from '../injector/constants';\r\nimport { ContextId, InstanceWrapper } from '../injector/instance-wrapper';\r\n\r\nexport abstract class ContextCreator {\r\n  public abstract createConcreteContext<T extends any[], R extends any[]>(\r\n    metadata: T,\r\n    contextId?: ContextId,\r\n    inquirerId?: string,\r\n  ): R;\r\n  public getGlobalMetadata?<T extends any[]>(\r\n    contextId?: ContextId,\r\n    inquirerId?: string,\r\n  ): T;\r\n\r\n  public createContext<T extends unknown[] = any, R extends unknown[] = any>(\r\n    instance: Controller,\r\n    callback: (...args: any[]) => void,\r\n    metadataKey: string,\r\n    contextId = STATIC_CONTEXT,\r\n    inquirerId?: string,\r\n  ): R {\r\n    const globalMetadata =\r\n      this.getGlobalMetadata &&\r\n      this.getGlobalMetadata<T>(contextId, inquirerId);\r\n    const classMetadata = this.reflectClassMetadata<T>(instance, metadataKey);\r\n    const methodMetadata = this.reflectMethodMetadata<T>(callback, metadataKey);\r\n    return [\r\n      ...this.createConcreteContext<T, R>(\r\n        globalMetadata || ([] as T),\r\n        contextId,\r\n        inquirerId,\r\n      ),\r\n      ...this.createConcreteContext<T, R>(classMetadata, contextId, inquirerId),\r\n      ...this.createConcreteContext<T, R>(\r\n        methodMetadata,\r\n        contextId,\r\n        inquirerId,\r\n      ),\r\n    ] as R;\r\n  }\r\n\r\n  public reflectClassMetadata<T>(instance: Controller, metadataKey: string): T {\r\n    const prototype = Object.getPrototypeOf(instance);\r\n    return Reflect.getMetadata(metadataKey, prototype.constructor);\r\n  }\r\n\r\n  public reflectMethodMetadata<T>(\r\n    callback: (...args: unknown[]) => unknown,\r\n    metadataKey: string,\r\n  ): T {\r\n    return Reflect.getMetadata(metadataKey, callback);\r\n  }\r\n\r\n  protected getContextId(\r\n    contextId: ContextId,\r\n    instanceWrapper: InstanceWrapper,\r\n  ): ContextId {\r\n    return contextId.getParent\r\n      ? contextId.getParent({\r\n          token: instanceWrapper.token,\r\n          isTreeDurable: instanceWrapper.isDependencyTreeDurable(),\r\n        })\r\n      : contextId;\r\n  }\r\n}\r\n"]}