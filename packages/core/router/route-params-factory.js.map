{"version":3,"file":"route-params-factory.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["router/route-params-factory.ts"],"names":[],"mappings":";;;AAAA,sFAA6E;AAG7E,MAAa,kBAAkB;IACtB,mBAAmB,CAKxB,GAA6B,EAC7B,IAA2B,EAC3B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAqD;QAErE,QAAQ,GAAG,EAAE;YACX,KAAK,uCAAe,CAAC,IAAI;gBACvB,OAAO,IAAW,CAAC;YACrB,KAAK,uCAAe,CAAC,OAAO;gBAC1B,OAAO,GAAU,CAAC;YACpB,KAAK,uCAAe,CAAC,QAAQ;gBAC3B,OAAO,GAAU,CAAC;YACpB,KAAK,uCAAe,CAAC,IAAI;gBACvB,OAAO,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;YACtD,KAAK,uCAAe,CAAC,KAAK;gBACxB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;YAC9C,KAAK,uCAAe,CAAC,IAAI;gBACvB,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACpC,KAAK,uCAAe,CAAC,KAAK;gBACxB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5C,KAAK,uCAAe,CAAC,OAAO;gBAC1B,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;YAC9D,KAAK,uCAAe,CAAC,OAAO;gBAC1B,OAAO,GAAG,CAAC,OAAO,CAAC;YACrB,KAAK,uCAAe,CAAC,IAAI;gBACvB,OAAO,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;YAC7B,KAAK,uCAAe,CAAC,KAAK;gBACxB,OAAO,GAAG,CAAC,KAAK,CAAC;YACnB,KAAK,uCAAe,CAAC,EAAE;gBACrB,OAAO,GAAG,CAAC,EAAE,CAAC;YAChB;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;AAxCD,gDAwCC","sourcesContent":["import { RouteParamtypes } from '@nestjs/common/enums/route-paramtypes.enum';\r\nimport { IRouteParamsFactory } from './interfaces/route-params-factory.interface';\r\n\r\nexport class RouteParamsFactory implements IRouteParamsFactory {\r\n  public exchangeKeyForValue<\r\n    TRequest extends Record<string, any> = any,\r\n    TResponse = any,\r\n    TResult = any,\r\n  >(\r\n    key: RouteParamtypes | string,\r\n    data: string | object | any,\r\n    { req, res, next }: { req: TRequest; res: TResponse; next: Function },\r\n  ): TResult {\r\n    switch (key) {\r\n      case RouteParamtypes.NEXT:\r\n        return next as any;\r\n      case RouteParamtypes.REQUEST:\r\n        return req as any;\r\n      case RouteParamtypes.RESPONSE:\r\n        return res as any;\r\n      case RouteParamtypes.BODY:\r\n        return data && req.body ? req.body[data] : req.body;\r\n      case RouteParamtypes.PARAM:\r\n        return data ? req.params[data] : req.params;\r\n      case RouteParamtypes.HOST:\r\n        const hosts = req.hosts || {};\r\n        return data ? hosts[data] : hosts;\r\n      case RouteParamtypes.QUERY:\r\n        return data ? req.query[data] : req.query;\r\n      case RouteParamtypes.HEADERS:\r\n        return data ? req.headers[data.toLowerCase()] : req.headers;\r\n      case RouteParamtypes.SESSION:\r\n        return req.session;\r\n      case RouteParamtypes.FILE:\r\n        return req[data || 'file'];\r\n      case RouteParamtypes.FILES:\r\n        return req.files;\r\n      case RouteParamtypes.IP:\r\n        return req.ip;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}\r\n"]}