{"version":3,"file":"paths-explorer.js","sourceRoot":"D:/04-learn-font/learn-node/nest/packages/core/","sources":["router/paths-explorer.ts"],"names":[],"mappings":";;;AAAA,wDAIkC;AAIlC,oEAI2C;AAY3C,MAAa,aAAa;IACxB,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAE1D,YAAY,CACjB,QAAoB,EACpB,SAAkB;QAElB,MAAM,iBAAiB,GAAG,IAAA,0BAAW,EAAC,SAAS,CAAC;YAC9C,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;YACjC,CAAC,CAAC,SAAS,CAAC;QAEd,OAAO,IAAI,CAAC,eAAe;aACxB,iBAAiB,CAAC,iBAAiB,CAAC;aACpC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;YACtB,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CACtC,QAAQ,EACR,iBAAiB,EACjB,MAAM,CACP,CAAC;YAEF,IAAI,KAAK,EAAE;gBACT,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjB;YAED,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC;IAEM,qBAAqB,CAC1B,QAAoB,EACpB,SAAiB,EACjB,UAAkB;QAElB,MAAM,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,iBAAiB,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,yBAAa,EAAE,iBAAiB,CAAC,CAAC;QACxE,IAAI,IAAA,0BAAW,EAAC,SAAS,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAC;SACb;QACD,MAAM,aAAa,GAAkB,OAAO,CAAC,WAAW,CACtD,2BAAe,EACf,iBAAiB,CAClB,CAAC;QACF,MAAM,OAAO,GAA6B,OAAO,CAAC,WAAW,CAC3D,4BAAgB,EAChB,iBAAiB,CAClB,CAAC;QACF,MAAM,IAAI,GAAG,IAAA,uBAAQ,EAAC,SAAS,CAAC;YAC9B,CAAC,CAAC,CAAC,IAAA,8BAAe,EAAC,SAAS,CAAC,CAAC;YAC9B,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,IAAA,8BAAe,EAAC,CAAC,CAAC,CAAC,CAAC;QAErD,OAAO;YACL,IAAI;YACJ,aAAa;YACb,cAAc,EAAE,gBAAgB;YAChC,UAAU;YACV,OAAO;SACR,CAAC;IACJ,CAAC;CACF;AA3DD,sCA2DC","sourcesContent":["import {\r\n  METHOD_METADATA,\r\n  PATH_METADATA,\r\n  VERSION_METADATA,\r\n} from '@nestjs/common/constants';\r\nimport { RequestMethod } from '@nestjs/common/enums';\r\nimport { Controller } from '@nestjs/common/interfaces/controllers/controller.interface';\r\nimport { VersionValue } from '@nestjs/common/interfaces/version-options.interface';\r\nimport {\r\n  addLeadingSlash,\r\n  isString,\r\n  isUndefined,\r\n} from '@nestjs/common/utils/shared.utils';\r\nimport { MetadataScanner } from '../metadata-scanner';\r\nimport { RouterProxyCallback } from './router-proxy';\r\n\r\nexport interface RouteDefinition {\r\n  path: string[];\r\n  requestMethod: RequestMethod;\r\n  targetCallback: RouterProxyCallback;\r\n  methodName: string;\r\n  version?: VersionValue;\r\n}\r\n\r\nexport class PathsExplorer {\r\n  constructor(private readonly metadataScanner: MetadataScanner) {}\r\n\r\n  public scanForPaths(\r\n    instance: Controller,\r\n    prototype?: object,\r\n  ): RouteDefinition[] {\r\n    const instancePrototype = isUndefined(prototype)\r\n      ? Object.getPrototypeOf(instance)\r\n      : prototype;\r\n\r\n    return this.metadataScanner\r\n      .getAllMethodNames(instancePrototype)\r\n      .reduce((acc, method) => {\r\n        const route = this.exploreMethodMetadata(\r\n          instance,\r\n          instancePrototype,\r\n          method,\r\n        );\r\n\r\n        if (route) {\r\n          acc.push(route);\r\n        }\r\n\r\n        return acc;\r\n      }, []);\r\n  }\r\n\r\n  public exploreMethodMetadata(\r\n    instance: Controller,\r\n    prototype: object,\r\n    methodName: string,\r\n  ): RouteDefinition | null {\r\n    const instanceCallback = instance[methodName];\r\n    const prototypeCallback = prototype[methodName];\r\n    const routePath = Reflect.getMetadata(PATH_METADATA, prototypeCallback);\r\n    if (isUndefined(routePath)) {\r\n      return null;\r\n    }\r\n    const requestMethod: RequestMethod = Reflect.getMetadata(\r\n      METHOD_METADATA,\r\n      prototypeCallback,\r\n    );\r\n    const version: VersionValue | undefined = Reflect.getMetadata(\r\n      VERSION_METADATA,\r\n      prototypeCallback,\r\n    );\r\n    const path = isString(routePath)\r\n      ? [addLeadingSlash(routePath)]\r\n      : routePath.map((p: string) => addLeadingSlash(p));\r\n\r\n    return {\r\n      path,\r\n      requestMethod,\r\n      targetCallback: instanceCallback,\r\n      methodName,\r\n      version,\r\n    };\r\n  }\r\n}\r\n"]}