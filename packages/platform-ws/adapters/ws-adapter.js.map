{"version":3,"file":"ws-adapter.js","sourceRoot":"","sources":["ws-adapter.ts"],"names":[],"mappings":"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","sourcesContent":["import { INestApplicationContext, Logger } from '@nestjs/common';\r\nimport { loadPackage } from '@nestjs/common/utils/load-package.util';\r\nimport { normalizePath, isNil } from '@nestjs/common/utils/shared.utils';\r\nimport { AbstractWsAdapter } from '@nestjs/websockets';\r\nimport {\r\n  CLOSE_EVENT,\r\n  CONNECTION_EVENT,\r\n  ERROR_EVENT,\r\n} from '@nestjs/websockets/constants';\r\nimport { MessageMappingProperties } from '@nestjs/websockets/gateway-metadata-explorer';\r\nimport * as http from 'http';\r\nimport { EMPTY, fromEvent, Observable } from 'rxjs';\r\nimport { filter, first, mergeMap, share, takeUntil } from 'rxjs/operators';\r\n\r\nlet wsPackage: any = {};\r\n\r\nenum READY_STATE {\r\n  CONNECTING_STATE = 0,\r\n  OPEN_STATE = 1,\r\n  CLOSING_STATE = 2,\r\n  CLOSED_STATE = 3,\r\n}\r\n\r\ntype HttpServerRegistryKey = number;\r\ntype HttpServerRegistryEntry = any;\r\ntype WsServerRegistryKey = number;\r\ntype WsServerRegistryEntry = any[];\r\n\r\nconst UNDERLYING_HTTP_SERVER_PORT = 0;\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport class WsAdapter extends AbstractWsAdapter {\r\n  protected readonly logger = new Logger(WsAdapter.name);\r\n  protected readonly httpServersRegistry = new Map<\r\n    HttpServerRegistryKey,\r\n    HttpServerRegistryEntry\r\n  >();\r\n  protected readonly wsServersRegistry = new Map<\r\n    WsServerRegistryKey,\r\n    WsServerRegistryEntry\r\n  >();\r\n\r\n  constructor(appOrHttpServer?: INestApplicationContext | any) {\r\n    super(appOrHttpServer);\r\n    wsPackage = loadPackage('ws', 'WsAdapter', () => require('ws'));\r\n  }\r\n\r\n  public create(\r\n    port: number,\r\n    options?: Record<string, any> & {\r\n      namespace?: string;\r\n      server?: any;\r\n      path?: string;\r\n    },\r\n  ) {\r\n    const { server, path, ...wsOptions } = options;\r\n    if (wsOptions?.namespace) {\r\n      const error = new Error(\r\n        '\"WsAdapter\" does not support namespaces. If you need namespaces in your project, consider using the \"@nestjs/platform-socket.io\" package instead.',\r\n      );\r\n      this.logger.error(error);\r\n      throw error;\r\n    }\r\n\r\n    if (port === UNDERLYING_HTTP_SERVER_PORT && this.httpServer) {\r\n      this.ensureHttpServerExists(port, this.httpServer);\r\n      const wsServer = this.bindErrorHandler(\r\n        new wsPackage.Server({\r\n          noServer: true,\r\n          ...wsOptions,\r\n        }),\r\n      );\r\n\r\n      this.addWsServerToRegistry(wsServer, port, path);\r\n      return wsServer;\r\n    }\r\n\r\n    if (server) {\r\n      return server;\r\n    }\r\n    if (path && port !== UNDERLYING_HTTP_SERVER_PORT) {\r\n      // Multiple servers with different paths\r\n      // sharing a single HTTP/S server running on different port\r\n      // than a regular HTTP application\r\n      const httpServer = this.ensureHttpServerExists(port);\r\n      httpServer?.listen(port);\r\n\r\n      const wsServer = this.bindErrorHandler(\r\n        new wsPackage.Server({\r\n          noServer: true,\r\n          ...wsOptions,\r\n        }),\r\n      );\r\n      this.addWsServerToRegistry(wsServer, port, path);\r\n      return wsServer;\r\n    }\r\n    const wsServer = this.bindErrorHandler(\r\n      new wsPackage.Server({\r\n        port,\r\n        path,\r\n        ...wsOptions,\r\n      }),\r\n    );\r\n    return wsServer;\r\n  }\r\n\r\n  public bindMessageHandlers(\r\n    client: any,\r\n    handlers: MessageMappingProperties[],\r\n    transform: (data: any) => Observable<any>,\r\n  ) {\r\n    const close$ = fromEvent(client, CLOSE_EVENT).pipe(share(), first());\r\n    const source$ = fromEvent(client, 'message').pipe(\r\n      mergeMap(data =>\r\n        this.bindMessageHandler(data, handlers, transform).pipe(\r\n          filter(result => !isNil(result)),\r\n        ),\r\n      ),\r\n      takeUntil(close$),\r\n    );\r\n    const onMessage = (response: any) => {\r\n      if (client.readyState !== READY_STATE.OPEN_STATE) {\r\n        return;\r\n      }\r\n      client.send(JSON.stringify(response));\r\n    };\r\n    source$.subscribe(onMessage);\r\n  }\r\n\r\n  public bindMessageHandler(\r\n    buffer: any,\r\n    handlers: MessageMappingProperties[],\r\n    transform: (data: any) => Observable<any>,\r\n  ): Observable<any> {\r\n    try {\r\n      const message = JSON.parse(buffer.data);\r\n      const messageHandler = handlers.find(\r\n        handler => handler.message === message.event,\r\n      );\r\n      const { callback } = messageHandler;\r\n      return transform(callback(message.data));\r\n    } catch {\r\n      return EMPTY;\r\n    }\r\n  }\r\n\r\n  public bindErrorHandler(server: any) {\r\n    server.on(CONNECTION_EVENT, (ws: any) =>\r\n      ws.on(ERROR_EVENT, (err: any) => this.logger.error(err)),\r\n    );\r\n    server.on(ERROR_EVENT, (err: any) => this.logger.error(err));\r\n    return server;\r\n  }\r\n\r\n  public bindClientDisconnect(client: any, callback: Function) {\r\n    client.on(CLOSE_EVENT, callback);\r\n  }\r\n\r\n  public async dispose() {\r\n    const closeEventSignals = Array.from(this.httpServersRegistry)\r\n      .filter(([port]) => port !== UNDERLYING_HTTP_SERVER_PORT)\r\n      .map(([_, server]) => new Promise(resolve => server.close(resolve)));\r\n\r\n    await Promise.all(closeEventSignals);\r\n    this.httpServersRegistry.clear();\r\n    this.wsServersRegistry.clear();\r\n  }\r\n\r\n  protected ensureHttpServerExists(\r\n    port: number,\r\n    httpServer = http.createServer(),\r\n  ) {\r\n    if (this.httpServersRegistry.has(port)) {\r\n      return;\r\n    }\r\n    this.httpServersRegistry.set(port, httpServer);\r\n\r\n    httpServer.on('upgrade', (request, socket, head) => {\r\n      const baseUrl = 'ws://' + request.headers.host + '/';\r\n      const pathname = new URL(request.url, baseUrl).pathname;\r\n      const wsServersCollection = this.wsServersRegistry.get(port);\r\n\r\n      let isRequestDelegated = false;\r\n      for (const wsServer of wsServersCollection) {\r\n        if (pathname === wsServer.path) {\r\n          wsServer.handleUpgrade(request, socket, head, (ws: unknown) => {\r\n            wsServer.emit('connection', ws, request);\r\n          });\r\n          isRequestDelegated = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isRequestDelegated) {\r\n        socket.destroy();\r\n      }\r\n    });\r\n    return httpServer;\r\n  }\r\n\r\n  protected addWsServerToRegistry<T extends Record<'path', string> = any>(\r\n    wsServer: T,\r\n    port: number,\r\n    path: string,\r\n  ) {\r\n    const entries = this.wsServersRegistry.get(port) ?? [];\r\n    entries.push(wsServer);\r\n\r\n    wsServer.path = normalizePath(path);\r\n    this.wsServersRegistry.set(port, entries);\r\n  }\r\n}\r\n"]}