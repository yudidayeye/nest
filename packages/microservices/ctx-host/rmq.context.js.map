{"version":3,"file":"rmq.context.js","sourceRoot":"","sources":["rmq.context.ts"],"names":[],"mappings":";;;AAAA,yDAAoD;AAIpD,MAAa,UAAW,SAAQ,iCAA8B;IAC5D,YAAY,IAAoB;QAC9B,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;CACF;AAzBD,gCAyBC","sourcesContent":["import { BaseRpcContext } from './base-rpc.context';\r\n\r\ntype RmqContextArgs = [Record<string, any>, any, string];\r\n\r\nexport class RmqContext extends BaseRpcContext<RmqContextArgs> {\r\n  constructor(args: RmqContextArgs) {\r\n    super(args);\r\n  }\r\n\r\n  /**\r\n   * Returns the original message (with properties, fields, and content).\r\n   */\r\n  getMessage() {\r\n    return this.args[0];\r\n  }\r\n\r\n  /**\r\n   * Returns the reference to the original RMQ channel.\r\n   */\r\n  getChannelRef() {\r\n    return this.args[1];\r\n  }\r\n\r\n  /**\r\n   * Returns the name of the pattern.\r\n   */\r\n  getPattern() {\r\n    return this.args[2];\r\n  }\r\n}\r\n"]}