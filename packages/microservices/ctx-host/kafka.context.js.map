{"version":3,"file":"kafka.context.js","sourceRoot":"","sources":["kafka.context.ts"],"names":[],"mappings":";;;AACA,yDAAoD;AAWpD,MAAa,YAAa,SAAQ,iCAAgC;IAChE,YAAY,IAAsB;QAChC,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;CACF;AA9CD,oCA8CC","sourcesContent":["import { Consumer, KafkaMessage, Producer } from '../external/kafka.interface';\r\nimport { BaseRpcContext } from './base-rpc.context';\r\n\r\ntype KafkaContextArgs = [\r\n  message: KafkaMessage,\r\n  partition: number,\r\n  topic: string,\r\n  consumer: Consumer,\r\n  heartbeat: () => Promise<void>,\r\n  producer: Producer,\r\n];\r\n\r\nexport class KafkaContext extends BaseRpcContext<KafkaContextArgs> {\r\n  constructor(args: KafkaContextArgs) {\r\n    super(args);\r\n  }\r\n\r\n  /**\r\n   * Returns the reference to the original message.\r\n   */\r\n  getMessage() {\r\n    return this.args[0];\r\n  }\r\n\r\n  /**\r\n   * Returns the partition.\r\n   */\r\n  getPartition() {\r\n    return this.args[1];\r\n  }\r\n\r\n  /**\r\n   * Returns the name of the topic.\r\n   */\r\n  getTopic() {\r\n    return this.args[2];\r\n  }\r\n\r\n  /**\r\n   * Returns the Kafka consumer reference.\r\n   */\r\n  getConsumer() {\r\n    return this.args[3];\r\n  }\r\n\r\n  /**\r\n   * Returns the Kafka heartbeat callback.\r\n   */\r\n  getHeartbeat() {\r\n    return this.args[4];\r\n  }\r\n\r\n  /**\r\n   * Returns the Kafka producer reference,\r\n   */\r\n  getProducer() {\r\n    return this.args[5];\r\n  }\r\n}\r\n"]}