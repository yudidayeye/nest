{"version":3,"file":"nats-record.serializer.js","sourceRoot":"","sources":["nats-record.serializer.ts"],"names":[],"mappings":";;;AAAA,8EAAqE;AACrE,oEAA6D;AAI7D,wDAAmE;AAEnE,IAAI,WAAW,GAAG,EAAS,CAAC;AAE5B,MAAa,oBAAoB;IAK/B;QACE,WAAW,GAAG,IAAA,+BAAW,EAAC,MAAM,EAAE,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,CAChE,OAAO,CAAC,MAAM,CAAC,CAChB,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;IAC3C,CAAC;IAED,SAAS,CAAC,MAAwB;QAChC,MAAM,WAAW,GACf,MAAM,EAAE,IAAI,IAAI,IAAA,uBAAQ,EAAC,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,YAAY,4BAAU;YACxE,CAAC,CAAE,MAAM,CAAC,IAAmB;YAC7B,CAAC,CAAC,IAAI,mCAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;QAElD,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC;YAClE,OAAO,EAAE,WAAW,CAAC,OAAO;SAC7B,CAAC;IACJ,CAAC;CACF;AAvBD,oDAuBC","sourcesContent":["import { loadPackage } from '@nestjs/common/utils/load-package.util';\r\nimport { isObject } from '@nestjs/common/utils/shared.utils';\r\nimport { NatsCodec } from '../external/nats-client.interface';\r\nimport { ReadPacket } from '../interfaces';\r\nimport { Serializer } from '../interfaces/serializer.interface';\r\nimport { NatsRecord, NatsRecordBuilder } from '../record-builders';\r\n\r\nlet natsPackage = {} as any;\r\n\r\nexport class NatsRecordSerializer\r\n  implements Serializer<ReadPacket, NatsRecord>\r\n{\r\n  private readonly jsonCodec: NatsCodec<unknown>;\r\n\r\n  constructor() {\r\n    natsPackage = loadPackage('nats', NatsRecordSerializer.name, () =>\r\n      require('nats'),\r\n    );\r\n    this.jsonCodec = natsPackage.JSONCodec();\r\n  }\r\n\r\n  serialize(packet: ReadPacket | any): NatsRecord {\r\n    const natsMessage =\r\n      packet?.data && isObject(packet.data) && packet.data instanceof NatsRecord\r\n        ? (packet.data as NatsRecord)\r\n        : new NatsRecordBuilder(packet?.data).build();\r\n\r\n    return {\r\n      data: this.jsonCodec.encode({ ...packet, data: natsMessage.data }),\r\n      headers: natsMessage.headers,\r\n    };\r\n  }\r\n}\r\n"]}