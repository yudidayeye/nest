{"version":3,"file":"kafka-response.deserializer.js","sourceRoot":"","sources":["kafka-response.deserializer.ts"],"names":[],"mappings":";;;AAAA,oEAAgE;AAChE,oEAA2D;AAG3D;;GAEG;AACH,MAAa,yBAAyB;IAGpC,WAAW,CAAC,OAAY,EAAE,OAA6B;QACrD,MAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,iCAAY,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;QACnE,IAAI,CAAC,IAAA,0BAAW,EAAC,OAAO,CAAC,OAAO,CAAC,iCAAY,CAAC,QAAQ,CAAC,CAAC,EAAE;YACxD,OAAO;gBACL,EAAE;gBACF,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,iCAAY,CAAC,QAAQ,CAAC;gBAC3C,UAAU,EAAE,IAAI;aACjB,CAAC;SACH;QACD,IAAI,CAAC,IAAA,0BAAW,EAAC,OAAO,CAAC,OAAO,CAAC,iCAAY,CAAC,gBAAgB,CAAC,CAAC,EAAE;YAChE,OAAO;gBACL,EAAE;gBACF,QAAQ,EAAE,OAAO,CAAC,KAAK;gBACvB,UAAU,EAAE,IAAI;aACjB,CAAC;SACH;QACD,OAAO;YACL,EAAE;YACF,QAAQ,EAAE,OAAO,CAAC,KAAK;YACvB,UAAU,EAAE,KAAK;SAClB,CAAC;IACJ,CAAC;CACF;AAzBD,8DAyBC","sourcesContent":["import { isUndefined } from '@nestjs/common/utils/shared.utils';\r\nimport { KafkaHeaders } from '../enums/kafka-headers.enum';\r\nimport { Deserializer, IncomingResponse } from '../interfaces';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport class KafkaResponseDeserializer\r\n  implements Deserializer<any, IncomingResponse>\r\n{\r\n  deserialize(message: any, options?: Record<string, any>): IncomingResponse {\r\n    const id = message.headers[KafkaHeaders.CORRELATION_ID].toString();\r\n    if (!isUndefined(message.headers[KafkaHeaders.NEST_ERR])) {\r\n      return {\r\n        id,\r\n        err: message.headers[KafkaHeaders.NEST_ERR],\r\n        isDisposed: true,\r\n      };\r\n    }\r\n    if (!isUndefined(message.headers[KafkaHeaders.NEST_IS_DISPOSED])) {\r\n      return {\r\n        id,\r\n        response: message.value,\r\n        isDisposed: true,\r\n      };\r\n    }\r\n    return {\r\n      id,\r\n      response: message.value,\r\n      isDisposed: false,\r\n    };\r\n  }\r\n}\r\n"]}