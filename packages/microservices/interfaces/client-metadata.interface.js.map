{"version":3,"file":"client-metadata.interface.js","sourceRoot":"","sources":["client-metadata.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Type } from '@nestjs/common';\r\nimport { ClientProxy } from '../client';\r\nimport { TcpSocket } from '../helpers';\r\nimport { Transport } from '../enums/transport.enum';\r\nimport { Deserializer } from './deserializer.interface';\r\nimport {\r\n  GrpcOptions,\r\n  KafkaOptions,\r\n  MqttOptions,\r\n  NatsOptions,\r\n  RedisOptions,\r\n  RmqOptions,\r\n} from './microservice-configuration.interface';\r\nimport { Serializer } from './serializer.interface';\r\nimport { ConnectionOptions } from 'tls';\r\n\r\nexport type ClientOptions =\r\n  | RedisOptions\r\n  | NatsOptions\r\n  | MqttOptions\r\n  | GrpcOptions\r\n  | KafkaOptions\r\n  | TcpClientOptions\r\n  | RmqOptions;\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport interface CustomClientOptions {\r\n  customClass: Type<ClientProxy>;\r\n  options?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport interface TcpClientOptions {\r\n  transport: Transport.TCP;\r\n  options?: {\r\n    host?: string;\r\n    port?: number;\r\n    serializer?: Serializer;\r\n    deserializer?: Deserializer;\r\n    tlsOptions?: ConnectionOptions;\r\n    socketClass?: Type<TcpSocket>;\r\n  };\r\n}\r\n"]}