{"version":3,"file":"message-handler.interface.js","sourceRoot":"","sources":["message-handler.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport interface MessageHandler<TInput = any, TContext = any, TResult = any> {\r\n  (data: TInput, ctx?: TContext):\r\n    | Promise<Observable<TResult>>\r\n    | Promise<TResult>;\r\n  next?: (\r\n    data: TInput,\r\n    ctx?: TContext,\r\n  ) => Promise<Observable<TResult>> | Promise<TResult>;\r\n  isEventHandler?: boolean;\r\n  extras?: Record<string, any>;\r\n}\r\n"]}