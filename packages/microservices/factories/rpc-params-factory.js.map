{"version":3,"file":"rpc-params-factory.js","sourceRoot":"","sources":["rpc-params-factory.ts"],"names":[],"mappings":";;;AAAA,oEAA2D;AAE3D,MAAa,gBAAgB;IACpB,mBAAmB,CACxB,IAAY,EACZ,IAAwB,EACxB,IAAe;QAEf,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QACD,QAAQ,IAAoB,EAAE;YAC5B,KAAK,iCAAY,CAAC,OAAO;gBACvB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1C,KAAK,iCAAY,CAAC,OAAO;gBACvB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,iCAAY,CAAC,SAAS;gBACzB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;AApBD,4CAoBC","sourcesContent":["import { RpcParamtype } from '../enums/rpc-paramtype.enum';\r\n\r\nexport class RpcParamsFactory {\r\n  public exchangeKeyForValue(\r\n    type: number,\r\n    data: string | undefined,\r\n    args: unknown[],\r\n  ) {\r\n    if (!args) {\r\n      return null;\r\n    }\r\n    switch (type as RpcParamtype) {\r\n      case RpcParamtype.PAYLOAD:\r\n        return data ? args[0]?.[data] : args[0];\r\n      case RpcParamtype.CONTEXT:\r\n        return args[1];\r\n      case RpcParamtype.GRPC_CALL:\r\n        return args[2];\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}\r\n"]}