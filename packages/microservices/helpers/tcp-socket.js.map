{"version":3,"file":"tcp-socket.js","sourceRoot":"","sources":["tcp-socket.ts"],"names":[],"mappings":";;;AAEA,4CAMsB;AACtB,uFAAiF;AACjF,2FAAqF;AAErF,MAAsB,SAAS;IAG7B,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,YAA4B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QANlC,aAAQ,GAAG,KAAK,CAAC;QAOvB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,sBAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,yBAAa,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,uBAAW,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,uBAAW,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEM,OAAO,CAAC,IAAY,EAAE,IAAY;QACvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,EAAE,CAAC,KAAa,EAAE,QAA6B;QACpD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,IAAI,CAAC,KAAa,EAAE,QAA6B;QACtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,GAAG;QACR,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,WAAW,CAAC,OAAY,EAAE,QAA8B;QAC7D,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,QAAQ,IAAI,QAAQ,CAAC,IAAI,sDAAwB,EAAE,CAAC,CAAC;YACrD,OAAO;SACR;QACD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAIO,MAAM,CAAC,IAAY;QACzB,IAAI;YACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAW,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACnB;IACH,CAAC;IAIS,WAAW,CAAC,IAAY;QAChC,IAAI,OAAgC,CAAC;QACrC,IAAI;YACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5B;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,IAAI,0DAA0B,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC/C;QACD,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAa,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;CACF;AAjED,8BAiEC","sourcesContent":["import { Buffer } from 'buffer';\r\nimport { Socket } from 'net';\r\nimport {\r\n  CLOSE_EVENT,\r\n  CONNECT_EVENT,\r\n  DATA_EVENT,\r\n  ERROR_EVENT,\r\n  MESSAGE_EVENT,\r\n} from '../constants';\r\nimport { NetSocketClosedException } from '../errors/net-socket-closed.exception';\r\nimport { InvalidJSONFormatException } from '../errors/invalid-json-format.exception';\r\n\r\nexport abstract class TcpSocket {\r\n  private isClosed = false;\r\n\r\n  public get netSocket() {\r\n    return this.socket;\r\n  }\r\n\r\n  constructor(public readonly socket: Socket) {\r\n    this.socket.on(DATA_EVENT, this.onData.bind(this));\r\n    this.socket.on(CONNECT_EVENT, () => (this.isClosed = false));\r\n    this.socket.on(CLOSE_EVENT, () => (this.isClosed = true));\r\n    this.socket.on(ERROR_EVENT, () => (this.isClosed = true));\r\n  }\r\n\r\n  public connect(port: number, host: string) {\r\n    this.socket.connect(port, host);\r\n    return this;\r\n  }\r\n\r\n  public on(event: string, callback: (err?: any) => void) {\r\n    this.socket.on(event, callback);\r\n    return this;\r\n  }\r\n\r\n  public once(event: string, callback: (err?: any) => void) {\r\n    this.socket.once(event, callback);\r\n    return this;\r\n  }\r\n\r\n  public end() {\r\n    this.socket.end();\r\n    return this;\r\n  }\r\n\r\n  public sendMessage(message: any, callback?: (err?: any) => void) {\r\n    if (this.isClosed) {\r\n      callback && callback(new NetSocketClosedException());\r\n      return;\r\n    }\r\n    this.handleSend(message, callback);\r\n  }\r\n\r\n  protected abstract handleSend(message: any, callback?: (err?: any) => void);\r\n\r\n  private onData(data: Buffer) {\r\n    try {\r\n      this.handleData(data);\r\n    } catch (e) {\r\n      this.socket.emit(ERROR_EVENT, e.message);\r\n      this.socket.end();\r\n    }\r\n  }\r\n\r\n  protected abstract handleData(data: Buffer | string);\r\n\r\n  protected emitMessage(data: string) {\r\n    let message: Record<string, unknown>;\r\n    try {\r\n      message = JSON.parse(data);\r\n    } catch (e) {\r\n      throw new InvalidJSONFormatException(e, data);\r\n    }\r\n    message = message || {};\r\n    this.socket.emit(MESSAGE_EVENT, message);\r\n  }\r\n}\r\n"]}