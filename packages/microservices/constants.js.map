{"version":3,"file":"constants.js","sourceRoot":"","sources":["constants.ts"],"names":[],"mappings":";;;AAAA,wDAA+D;AAElD,QAAA,gBAAgB,GAAG,IAAI,CAAC;AACxB,QAAA,gBAAgB,GAAG,WAAW,CAAC;AAE/B,QAAA,kBAAkB,GAAG,IAAI,CAAC;AAC1B,QAAA,kBAAkB,GAAG,WAAW,CAAC;AAEjC,QAAA,gBAAgB,GAAG,uBAAuB,CAAC;AAC3C,QAAA,gBAAgB,GAAG,uBAAuB,CAAC;AAC3C,QAAA,gBAAgB,GAAG,gBAAgB,CAAC;AACpC,QAAA,eAAe,GAAG,kBAAkB,CAAC;AACrC,QAAA,oBAAoB,GAAG,gBAAgB,CAAC;AAExC,QAAA,aAAa,GAAG,SAAS,CAAC;AAC1B,QAAA,gBAAgB,GAAG,YAAY,CAAC;AAChC,QAAA,oBAAoB,GAAG,eAAe,CAAC;AACvC,QAAA,aAAa,GAAG,SAAS,CAAC;AAC1B,QAAA,UAAU,GAAG,MAAM,CAAC;AACpB,QAAA,WAAW,GAAG,OAAO,CAAC;AACtB,QAAA,WAAW,GAAG,OAAO,CAAC;AACtB,QAAA,SAAS,GAAG,WAAW,CAAC;AACxB,QAAA,YAAY,GAAG,WAAW,CAAC;AAE3B,QAAA,gBAAgB,GAAG,uBAAuB,CAAC;AAC3C,QAAA,uBAAuB,GAAG,8BAA8B,CAAC;AACzD,QAAA,kBAAkB,GAAG,yBAAyB,CAAC;AAC/C,QAAA,6BAA6B,GAAG,sBAAsB,CAAC;AACvD,QAAA,wBAAwB,GAAG,4BAA4B,CAAC;AACxD,QAAA,eAAe,GAAG,kCAAkC,CAAC;AACrD,QAAA,mBAAmB,GAAG,+BAAmB,CAAC;AAE1C,QAAA,wBAAwB,GAAG,+BAA+B,CAAC;AAC3D,QAAA,sBAAsB,GAAG,6BAA6B,CAAC;AAEvD,QAAA,iBAAiB,GAAG,SAAS,CAAC;AAC9B,QAAA,0BAA0B,GAAG,CAAC,CAAC;AAC/B,QAAA,oCAAoC,GAAG,KAAK,CAAC;AAC7C,QAAA,yBAAyB,GAAG,EAAE,CAAC;AAC/B,QAAA,iBAAiB,GAAG,IAAI,CAAC;AACzB,QAAA,sBAAsB,GAAG,KAAK,CAAC;AAC/B,QAAA,qBAAqB,GAAG,KAAK,CAAC;AACpC,MAAM,oBAAoB,GAAG,CAClC,IAA0B,EAC1B,OAAe,EACf,EAAE,CACF,yGAAyG,OAAO,EAAE,CAAC;AAJxG,QAAA,oBAAoB,wBAIoF;AACxG,QAAA,yBAAyB,GAAG,oBAAoB,CAAC;AAEvD,MAAM,gBAAgB,GAAG,CAAC,IAA0B,EAAE,OAAe,EAAE,EAAE,CAC9E,oFAAoF,OAAO,EAAE,CAAC;AADnF,QAAA,gBAAgB,oBACmE;AACnF,QAAA,kBAAkB,GAAG,qEAAqE,CAAC;AAE3F,QAAA,wBAAwB,GAAG,6CAA6C,CAAC;AAEzE,QAAA,oBAAoB,GAAG,iBAAiB,CAAC;AACzC,QAAA,mBAAmB,GAAG,cAAc,CAAC;AAErC,QAAA,cAAc,GAAG,GAAG,CAAC;AACrB,QAAA,oBAAoB,GAAG,GAAG,CAAC;AAC3B,QAAA,iBAAiB,GAAG,GAAG,CAAC;AAExB,QAAA,YAAY,GAAG,cAAc,CAAC;AAC9B,QAAA,QAAQ,GAAG,UAAU,CAAC;AACtB,QAAA,UAAU,GAAG,YAAY,CAAC;AAE1B,QAAA,yBAAyB,GACpC,wDAAwD,CAAC","sourcesContent":["import { ROUTE_ARGS_METADATA } from '@nestjs/common/constants';\r\n\r\nexport const TCP_DEFAULT_PORT = 3000;\r\nexport const TCP_DEFAULT_HOST = 'localhost';\r\n\r\nexport const REDIS_DEFAULT_PORT = 6379;\r\nexport const REDIS_DEFAULT_HOST = 'localhost';\r\n\r\nexport const NATS_DEFAULT_URL = 'nats://localhost:4222';\r\nexport const MQTT_DEFAULT_URL = 'mqtt://localhost:1883';\r\nexport const GRPC_DEFAULT_URL = 'localhost:5000';\r\nexport const RQM_DEFAULT_URL = 'amqp://localhost';\r\nexport const KAFKA_DEFAULT_BROKER = 'localhost:9092';\r\n\r\nexport const CONNECT_EVENT = 'connect';\r\nexport const DISCONNECT_EVENT = 'disconnect';\r\nexport const CONNECT_FAILED_EVENT = 'connectFailed';\r\nexport const MESSAGE_EVENT = 'message';\r\nexport const DATA_EVENT = 'data';\r\nexport const ERROR_EVENT = 'error';\r\nexport const CLOSE_EVENT = 'close';\r\nexport const SUBSCRIBE = 'subscribe';\r\nexport const CANCEL_EVENT = 'cancelled';\r\n\r\nexport const PATTERN_METADATA = 'microservices:pattern';\r\nexport const PATTERN_EXTRAS_METADATA = 'microservices:pattern_extras';\r\nexport const TRANSPORT_METADATA = 'microservices:transport';\r\nexport const CLIENT_CONFIGURATION_METADATA = 'microservices:client';\r\nexport const PATTERN_HANDLER_METADATA = 'microservices:handler_type';\r\nexport const CLIENT_METADATA = 'microservices:is_client_instance';\r\nexport const PARAM_ARGS_METADATA = ROUTE_ARGS_METADATA;\r\n\r\nexport const REQUEST_PATTERN_METADATA = 'microservices:request_pattern';\r\nexport const REPLY_PATTERN_METADATA = 'microservices:reply_pattern';\r\n\r\nexport const RQM_DEFAULT_QUEUE = 'default';\r\nexport const RQM_DEFAULT_PREFETCH_COUNT = 0;\r\nexport const RQM_DEFAULT_IS_GLOBAL_PREFETCH_COUNT = false;\r\nexport const RQM_DEFAULT_QUEUE_OPTIONS = {};\r\nexport const RQM_DEFAULT_NOACK = true;\r\nexport const RQM_DEFAULT_PERSISTENT = false;\r\nexport const RQM_DEFAULT_NO_ASSERT = false;\r\nexport const RQM_NO_EVENT_HANDLER = (\r\n  text: TemplateStringsArray,\r\n  pattern: string,\r\n) =>\r\n  `An unsupported event was received. It has been acknowledged, so it will not be re-delivered. Pattern: ${pattern}`;\r\nexport const GRPC_DEFAULT_PROTO_LOADER = '@grpc/proto-loader';\r\n\r\nexport const NO_EVENT_HANDLER = (text: TemplateStringsArray, pattern: string) =>\r\n  `There is no matching event handler defined in the remote service. Event pattern: ${pattern}`;\r\nexport const NO_MESSAGE_HANDLER = `There is no matching message handler defined in the remote service.`;\r\n\r\nexport const DISCONNECTED_RMQ_MESSAGE = `Disconnected from RMQ. Trying to reconnect.`;\r\n\r\nexport const KAFKA_DEFAULT_CLIENT = 'nestjs-consumer';\r\nexport const KAFKA_DEFAULT_GROUP = 'nestjs-group';\r\n\r\nexport const MQTT_SEPARATOR = '/';\r\nexport const MQTT_WILDCARD_SINGLE = '+';\r\nexport const MQTT_WILDCARD_ALL = '#';\r\n\r\nexport const ECONNREFUSED = 'ECONNREFUSED';\r\nexport const CONN_ERR = 'CONN_ERR';\r\nexport const EADDRINUSE = 'EADDRINUSE';\r\n\r\nexport const CONNECTION_FAILED_MESSAGE =\r\n  'Connection to transport failed. Trying to reconnect...';\r\n"]}