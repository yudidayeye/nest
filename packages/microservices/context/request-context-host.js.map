{"version":3,"file":"request-context-host.js","sourceRoot":"","sources":["request-context-host.ts"],"names":[],"mappings":";;;AAGA;;GAEG;AACH,MAAa,kBAAkB;IAK7B,YACkB,OAAqC,EACrC,IAAW,EACX,OAAiB;QAFjB,YAAO,GAAP,OAAO,CAA8B;QACrC,SAAI,GAAJ,IAAI,CAAO;QACX,YAAO,GAAP,OAAO,CAAU;IAChC,CAAC;IAEJ,MAAM,CAAC,MAAM,CACX,OAAqC,EACrC,IAAW,EACX,OAAiB;QAEjB,MAAM,IAAI,GAAG,IAAI,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF;AA/BD,gDA+BC","sourcesContent":["import { BaseRpcContext } from '../ctx-host/base-rpc.context';\r\nimport { RequestContext } from '../interfaces';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport class RequestContextHost<\r\n  TData = any,\r\n  TContext extends BaseRpcContext = any,\r\n> implements RequestContext<TData>\r\n{\r\n  constructor(\r\n    public readonly pattern: string | Record<string, any>,\r\n    public readonly data: TData,\r\n    public readonly context: TContext,\r\n  ) {}\r\n\r\n  static create<TData, TContext extends BaseRpcContext>(\r\n    pattern: string | Record<string, any>,\r\n    data: TData,\r\n    context: TContext,\r\n  ): RequestContext<TData, TContext> {\r\n    const host = new RequestContextHost(pattern, data, context);\r\n    return host;\r\n  }\r\n\r\n  public getData(): TData {\r\n    return this.data;\r\n  }\r\n\r\n  public getPattern(): string | Record<string, any> {\r\n    return this.pattern;\r\n  }\r\n\r\n  public getContext(): TContext {\r\n    return this.context;\r\n  }\r\n}\r\n"]}