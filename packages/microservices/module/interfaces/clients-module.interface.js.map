{"version":3,"file":"clients-module.interface.js","sourceRoot":"","sources":["clients-module.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { ClientOptions, CustomClientOptions } from '../../interfaces';\r\nimport { Type, Provider, ModuleMetadata } from '@nestjs/common/interfaces';\r\n\r\nexport type ClientProvider = ClientOptions | CustomClientOptions;\r\n\r\nexport type ClientProviderOptions = ClientProvider & {\r\n  name: string | symbol;\r\n};\r\n\r\nexport type ClientsModuleOptions =\r\n  | Array<ClientProviderOptions>\r\n  | {\r\n      clients: Array<ClientProviderOptions>;\r\n      isGlobal?: boolean;\r\n    };\r\n\r\nexport interface ClientsModuleOptionsFactory {\r\n  createClientOptions(): Promise<ClientProvider> | ClientProvider;\r\n}\r\n\r\nexport interface ClientsProviderAsyncOptions\r\n  extends Pick<ModuleMetadata, 'imports'> {\r\n  useExisting?: Type<ClientsModuleOptionsFactory>;\r\n  useClass?: Type<ClientsModuleOptionsFactory>;\r\n  useFactory?: (...args: any[]) => Promise<ClientProvider> | ClientProvider;\r\n  inject?: any[];\r\n  extraProviders?: Provider[];\r\n  name: string | symbol;\r\n}\r\n\r\nexport type ClientsModuleAsyncOptions =\r\n  | Array<ClientsProviderAsyncOptions>\r\n  | {\r\n      clients: Array<ClientsProviderAsyncOptions>;\r\n      isGlobal?: boolean;\r\n    };\r\n"]}