{"version":3,"file":"get-body-parser-options.util.js","sourceRoot":"","sources":["get-body-parser-options.util.ts"],"names":[],"mappings":";;;AAIA,MAAM,aAAa,GAAG,CACpB,GAAoC,EACpC,IAAoB,EACpB,MAAc,EACd,EAAE;IACF,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC3B,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;KACtB;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,SAAgB,oBAAoB,CAClC,OAAgB,EAChB,OAA6C;IAE7C,IAAI,aAAa,GAAY,CAAC,OAAO,IAAI,EAAE,CAAY,CAAC;IAExD,IAAI,OAAO,KAAK,IAAI,EAAE;QACpB,aAAa,GAAG;YACd,GAAG,aAAa;YAChB,MAAM,EAAE,aAAa;SACtB,CAAC;KACH;IAED,OAAO,aAAa,CAAC;AACvB,CAAC;AAdD,oDAcC","sourcesContent":["import type { RawBodyRequest } from '@nestjs/common';\r\nimport type { IncomingMessage, ServerResponse } from 'http';\r\nimport type { NestExpressBodyParserOptions } from '../../interfaces';\r\n\r\nconst rawBodyParser = (\r\n  req: RawBodyRequest<IncomingMessage>,\r\n  _res: ServerResponse,\r\n  buffer: Buffer,\r\n) => {\r\n  if (Buffer.isBuffer(buffer)) {\r\n    req.rawBody = buffer;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport function getBodyParserOptions<Options = NestExpressBodyParserOptions>(\r\n  rawBody: boolean,\r\n  options?: Omit<Options, 'verify'> | undefined,\r\n): Options {\r\n  let parserOptions: Options = (options || {}) as Options;\r\n\r\n  if (rawBody === true) {\r\n    parserOptions = {\r\n      ...parserOptions,\r\n      verify: rawBodyParser,\r\n    };\r\n  }\r\n\r\n  return parserOptions;\r\n}\r\n"]}