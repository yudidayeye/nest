{"version":3,"file":"testing-logger.service.js","sourceRoot":"","sources":["testing-logger.service.ts"],"names":[],"mappings":";;;AAAA,yDAAyD;AACzD,sDAAsD;AACtD,2CAA+C;AAE/C;;GAEG;AACH,MAAa,aAAc,SAAQ,sBAAa;IAC9C;QACE,KAAK,CAAC,SAAS,CAAC,CAAC;IACnB,CAAC;IAED,GAAG,CAAC,OAAe,IAAG,CAAC;IACvB,IAAI,CAAC,OAAe,IAAG,CAAC;IACxB,KAAK,CAAC,OAAe,IAAG,CAAC;IACzB,OAAO,CAAC,OAAe,IAAG,CAAC;IAC3B,KAAK,CAAC,OAAe,EAAE,GAAG,cAAqB;QAC7C,OAAO,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC;IACjD,CAAC;CACF;AAZD,sCAYC","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { ConsoleLogger } from '@nestjs/common';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport class TestingLogger extends ConsoleLogger {\r\n  constructor() {\r\n    super('Testing');\r\n  }\r\n\r\n  log(message: string) {}\r\n  warn(message: string) {}\r\n  debug(message: string) {}\r\n  verbose(message: string) {}\r\n  error(message: string, ...optionalParams: any[]) {\r\n    return super.error(message, ...optionalParams);\r\n  }\r\n}\r\n"]}